#FlashView
import os

AddOption(
    '--release-build',
    action='store_true',
    help='release build',
    default=False)
    
    
print("flashView")

rootpath = Dir('..').abspath
extpath = os.path.join(rootpath, '../')
buildpath = os.path.join(rootpath, 'build')
qt5dir = "/usr/include/qt5"

env = Environment(
			toolpath=[
					os.path.join(extpath, 'scons-build-tools/site_tools'),
					os.path.join(rootpath, 'ext'),
					],
            tools=['utils_buildformat'],
            BASEPATH=rootpath,
            ENV=os.environ)

if GetOption('release_build'):
	buildfolder = os.path.join(buildpath, 'release')
	env['CCFLAGS_optimize'] = ['-O2']
else:
	buildfolder = os.path.join(buildpath, 'debug')
	env.ParseFlags('-DDEBUG')
	env['CCFLAGS_optimize'] = ['-O0']


env['BUILDPATH'] = os.path.abspath(buildfolder)
env['ROOTPATH'] = rootpath
env['QT5DIR'] = qt5dir
env['ENV']['PKG_CONFIG_PATH'] = os.path.join(qt5dir, 'lib/pkgconfig')
env['CXXFLAGS_language'] = ['-std=c++11']

env.Tool('settings_buildpath')
env.Tool('qt5')

files = Glob('*.cpp')

env.Append(CPPPATH=[
	os.path.abspath('.'),
	os.path.abspath('./GeneratedFiles'),
	])

env.EnableQt5Modules(['QtWidgets'])

env.Append(CCFLAGS = '-fPIC')

program = env.Program('flashViewer', files) 
install = env.Install('$BUILDPATH', program)
env.Alias('flashView', install)

